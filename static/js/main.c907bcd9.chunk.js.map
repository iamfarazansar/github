{"version":3,"sources":["Component/UserCard.js","Context/UserContext.js","Component/Repos.js","Pages/Home.js","Pages/SignIn.js","Pages/SignUp.js","Pages/PageNotFound.js","layout/footer.js","layout/header.js","App.js","config/firebaseconfig.js","serviceWorker.js","index.js"],"names":["UserCard","user","Card","className","src","avatar_url","CardBody","name","location","bio","hirable","follower","UserContext","createContext","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","language","description","Home","context","useContext","query","setQuery","setUser","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","Signup","email","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Signin","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c907bcd9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\n\nconst UserCard = ({ user }) => {\n  return (\n    <Card className=\"text-center mt-3 mb-4\">\n      <img src={user.avatar_url} className=\"img-thumbnail\" />\n      <CardBody>\n        <div className=\"text-primary\">{user.name}</div>\n        <div className=\"text-primary\">{user.location}</div>\n        <div className=\"text-primary\">{user.bio}</div>\n        <div className=\"text-primary\">\n          Available For Hire: {user.hirable ? \"YES\" : \"NO\"}\n        </div>\n        <div className=\"text-primary\">Followers: {user.follower}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default UserCard;\n","import { createContext } from \"react\";\n\nexport const UserContext = createContext();\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\n\nconst Repos = ({ repos_url }) => {\n  const [repos, setRepos] = useState([]);\n\n  const fetchRepos = async () => {\n    const { data } = await Axios.get(repos_url);\n    setRepos(data);\n  };\n\n  useEffect(() => {\n    fetchRepos();\n  }, [repos_url]);\n\n  return (\n    <ListGroup>\n      {repos.map((repo) => (\n        <ListGroupItem key={repo.id}>\n          <div className=\"text-primary\">{repo.name}</div>\n          <div className=\"text-secondary\">{repo.language}</div>\n          <div className=\"text-info\">{repo.description}</div>\n        </ListGroupItem>\n      ))}\n    </ListGroup>\n  );\n};\n\nexport default Repos;\n","import React, { useState, useContext } from \"react\";\nimport Axios from \"axios\";\n\nimport {\n  Row,\n  Container,\n  Col,\n  Input,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n} from \"reactstrap\";\n\nimport UserCard from \"../Component/UserCard\";\nimport { Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../Context/UserContext\";\nimport { toast } from \"react-toastify\";\nimport Repos from \"../Component/Repos\";\n\nconst Home = () => {\n  const context = useContext(UserContext);\n  const [query, setQuery] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const fetchDetails = async () => {\n    try {\n      const { data } = await Axios.get(`https://api.github.com/users/${query}`);\n      setUser(data);\n      console.log(data);\n    } catch (error) {\n      toast(\"Not able to locate user\", { type: \"error\" });\n    }\n  };\n\n  if (!context.user?.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n  return (\n    <Container>\n      <Row className=\" mt-3\">\n        <Col md=\"5\">\n          <InputGroup>\n            <Input\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"Please provide the username\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button onClick={fetchDetails} color=\"primary\">\n                Fetch User\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n          {user ? <UserCard user={user} /> : \"\"}\n        </Col>\n        <Col md=\"7\">{user ? <Repos repos_url={user.repos_url} /> : null}</Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Container,\n  Form,\n  Button,\n  FormGroup,\n  Label,\n  Col,\n  Input,\n  Row,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n} from \"reactstrap\";\n\nimport firebase from \"firebase/app\";\nimport { UserContext } from \"../Context/UserContext\";\nimport { Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst Signup = () => {\n  const context = useContext(UserContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSignUp = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((res) => {\n        console.log(res);\n        context.setUser({ email: res.user.email, uid: res.user.uid });\n      })\n      .catch((error) => {\n        console.log(error);\n        toast(error.message, {\n          type: \"error\",\n        });\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSignUp();\n  };\n\n  if (context.user?.uid) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container className=\"text-center\">\n      <Row>\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\n          <Card>\n            <Form onSubmit={handleSubmit}>\n              <CardHeader className=\"\">SignIn here</CardHeader>\n              <CardBody>\n                <FormGroup row>\n                  <Label for=\"email\" sm={3}>\n                    Email\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      placeholder=\"provide your email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"password\" sm={3}>\n                    Password\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      placeholder=\"your password here\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </Col>\n                </FormGroup>\n              </CardBody>\n              <CardFooter>\n                <Button type=\"submit\" block color=\"primary\">\n                  Sign In\n                </Button>\n              </CardFooter>\n            </Form>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Container,\n  Form,\n  Button,\n  FormGroup,\n  Label,\n  Col,\n  Input,\n  Row,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n} from \"reactstrap\";\n\nimport firebase from \"firebase/app\";\nimport { UserContext } from \"../Context/UserContext\";\nimport { Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst Signup = () => {\n  const context = useContext(UserContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSignUp = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((res) => {\n        console.log(res);\n        context.setUser({ email: res.user.email, uid: res.user.uid });\n      })\n      .catch((error) => {\n        console.log(error);\n        toast(error.message, {\n          type: \"error\",\n        });\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleSignUp();\n  };\n\n  if (context.user?.uid) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container className=\"text-center\">\n      <Row>\n        <Col lg={6} className=\"offset-lg-3 mt-5\">\n          <Card>\n            <Form onSubmit={handleSubmit}>\n              <CardHeader className=\"\">SignUP here</CardHeader>\n              <CardBody>\n                <FormGroup row>\n                  <Label for=\"email\" sm={3}>\n                    Email\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      placeholder=\"provide your email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"password\" sm={3}>\n                    Password\n                  </Label>\n                  <Col sm={9}>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      placeholder=\"your password here\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </Col>\n                </FormGroup>\n              </CardBody>\n              <CardFooter>\n                <Button type=\"submit\" block color=\"primary\">\n                  Sign In\n                </Button>\n              </CardFooter>\n            </Form>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nconst PageNotFound = () => {\n  return (\n    <div>\n      <h1>PageNotFound Page</h1>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nconst Footer = () => {\n  return (\n    <Container\n      fluid\n      tag=\"footer\"\n      className=\"text-center bg-info text-white text-uppercase fixed-bottom\"\n    >\n      LCO Github Search App with Firebase\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n} from \"reactstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { UserContext } from \"../Context/UserContext\";\n\nconst Header = () => {\n  const context = useContext(UserContext);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <Navbar color=\"info\" light expand=\"md\">\n      <NavbarBrand>\n        <Link to=\"/\" className=\"text-white\">\n          LCO GIThub\n        </Link>\n      </NavbarBrand>\n      <NavbarText className=\"text-white\">\n        {context.user?.email ? context.user.email : \"\"}\n      </NavbarText>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"ml-auto\" navbar>\n          {context.user ? (\n            <NavItem>\n              <NavLink\n                onClick={() => {\n                  context.setUser(null);\n                }}\n                className=\"text-white\"\n              >\n                Logout\n              </NavLink>\n            </NavItem>\n          ) : (\n            <>\n              <NavItem>\n                <NavLink tag={Link} to=\"/signup\" className=\"text-white\">\n                  SignUp\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink tag={Link} to=\"/signin\" className=\"text-white\">\n                  SignIn\n                </NavLink>\n              </NavItem>\n            </>\n          )}\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//react-router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//toast\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n//firebase\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n//components\nimport Home from \"./Pages/Home\";\nimport Signin from \"./Pages/SignIn\";\nimport Signup from \"./Pages/SignUp\";\nimport PageNotFound from \"./Pages/PageNotFound\";\nimport { UserContext } from \"./Context/UserContext\";\nimport Footer from \"./layout/footer\";\nimport Header from \"./layout/header\";\n\nimport firebaseConfig from \"./config/firebaseconfig\";\n//init firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{ user, setUser }}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"*\" component={PageNotFound} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","export default {\n  apiKey: \"AIzaSyDTK85_VbTLHkntSIdLCsWomWmx5TGImy0\",\n  authDomain: \"mygitapp-c6e3e.firebaseapp.com\",\n  databaseURL: \"https://mygitapp-c6e3e.firebaseio.com\",\n  projectId: \"mygitapp-c6e3e\",\n  storageBucket: \"mygitapp-c6e3e.appspot.com\",\n  messagingSenderId: \"981391860585\",\n  appId: \"1:981391860585:web:662f12a661d4f2d19453f8\",\n  measurementId: \"G-TFDBJD7VPD\",\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}